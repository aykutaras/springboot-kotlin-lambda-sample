buildscript {
  ext.kotlin_version = '1.2.20'
  ext {
    springBootVersion = '1.5.10.RELEASE'
    dependencyManagementPluginVersion = '1.0.3.RELEASE'
    kotlinVersion = '1.2.20'
    swaggerVersion = '2.5.0'
  }
  repositories {
    mavenCentral()
  }

  dependencies {
    classpath "io.spring.gradle:dependency-management-plugin:${dependencyManagementPluginVersion}"
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
    classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    classpath("org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion")

  }
}

apply plugin: 'kotlin'
apply plugin: 'groovy'
apply plugin: 'kotlin-spring'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'net.aykutaras'
version = '1.0.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileKotlin {
  kotlinOptions {
    freeCompilerArgs = ["-Xjsr305=strict"]
    jvmTarget = "1.8"
  }
}
compileTestKotlin {
  kotlinOptions {
    freeCompilerArgs = ["-Xjsr305=strict"]
    jvmTarget = "1.8"
  }
}

repositories {
  mavenCentral()
}

dependencies {
  compile('org.springframework.boot:spring-boot-starter-web')
  compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
  compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
  compile 'com.amazonaws:aws-lambda-java-core:1.1.0'
  compile 'com.amazonaws:aws-lambda-java-log4j:1.0.0'

  compile("io.springfox:springfox-swagger2")
  compile("io.springfox:springfox-swagger-ui")

  testCompile 'org.codehaus.groovy:groovy-all'
  testCompile 'org.spockframework:spock-core:1.1-groovy-2.4-rc-4'
  testCompile 'org.spockframework:spock-spring:1.1-groovy-2.4-rc-4'
  testCompile 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
  dependencies {
    dependency "io.springfox:springfox-swagger2:${swaggerVersion}"
    dependency "io.springfox:springfox-swagger-ui:${swaggerVersion}"
  }
}

// Task for building the zip file for upload
task buildZip(type: Zip) {
  // set the base name of the zip file
  baseName = "${project.name}"
  from compileGroovy
  from processResources
  into('lib') {
    from configurations.runtime
  }
}

build.dependsOn buildZip

